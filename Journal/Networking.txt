							Networking

				

						Introduction to Networking




Network: A Network is a group of devices connected to each other allowing them to share information and resources.

LAN: Local Area Network. (Connects Devices in a home together for example)

WAN: Wide Area Network. (Connects large areas together. The Largest WAN is the internet)

						Importance of Networks
- Enables communication between devices. 
- Facilities sharing of files, printers and more
- Critical for browsing, streaming and communication.
- Backbone for app connectivity. 

(When you use an app, your device sends data to a server over a network. Server processes the data and sends back response)

						Networking in DevOps

Server Interaction: Enables communication between servers and applications
Deployment: Critical for launching, updating and managing applications
Management: Enables Monitoring and Managing of Infrastructure
Optimisation: Enhance performance by ensuring data flows smoothly between devices and servers.


						Key Networking Components

- Switches: Connects multiple devices within the same network. Manages data flow within a LAN
- Router: Direct traffic between different networks. Connects Networks. (Home network - Internet)
- Firewalls: Monitors and controlls incoming and outgoing network traffic based on pre-determined security rules.


						IP addressing

- Unique Identifer for each device on network. Allows devices to locate, Identify and communicate with one another.

				Ipv4					Ipv6
- Most common						- 128 bit numbers. eight groups of four hexadecimal digits.
- ex: 192.168.0.5 (32-bit numbers) (numbers < 255)	- Much larger pool of unique adresses
- Ipv4 addresses becoming scarce (internet growing)	- Improved security features
							- Simplified adress assignment

						MAC Addresses
MAC: Media Access Control Address
- Unique ID assigned to network interface
- Each device on network has own unique MAC address
- 48-bit address ex: 00:1A:2B:3C:4D:5E
- Operate at the data link layer of the OSI model. ?????
- Help Devices ID each other on the local network.
- Play a critical role in network communication and security. 
- Crucial for making sure devices connect to the correct network


						Ports and Protocols: TCP,UDP

Ports: Doors on Device. Each door is numbered. Each number is used for specific type of network communication
	Port 80: Word traffic (HTTP)
	Port 443: (HTTPS)
Ports: Help facilitate communication between devices and make sure data goes to the right place. 

Protocols: Rules of road for data transmission. HTTP, FTP, SNTP.
	   Ensures Devices can communicate effectively by following the same set of rules. (Like Languages)

						So

Ports Ensure data gets to right application on your device and Protocosl ensure Devices can understand each other
										(Using same rule set)


					The 2 Main protocols. TCP and UDP



					Transmission control protocol (TCP)

TCP: A fundemental Protocol. 

TCP is the postman of the internet. Ensures data from one devices reaches another device accurately and in correct order.

Characteristics: 
- Connection Oriented. Before data is sent, connection is established
- Requires "Handshake". 
- Reliable data transfer. (Ensures all data sent is recieved correctly. If data lost/corrupted, TCP will resend)
- Error Checking

Functions (usecases):
- Ensures data is delivered in order
- controls flow of data to prevent congestion and ensure smooth error free communication
- Bidirectional communication: When devices need to exchange data back and forth. (web browsing, email...)
- Essential for any application where reliable delivery of data is essential. 


						User Datagram Protocol (UDP)

UDP is a simple protocol used to send and recieve data

Characteristics: 
- Connectionless (No formal connection established between sender and reciever. Each packet sent independently)
- Simple protocol to send and recieve data
- no prior communication needed. Benefits: Data sent immedietely. Drawbacks: No Gaurantee data will reach destination
- Fast but less reliable

Functions (Usecases):
- Suitable for real-time applications (ex: Video Streaming, Gaming) Speed more important than reliability.
- DNS (Anything DNS related uses UDP behind the scenes)
- VPN (VPN uses DNS because faster and works better for streaming applications)


					
							OSI Model



The OSI model is a conceptual framework explaining how data travels through a network, divided into 7 layers. from physical hardware up to the applications you use.

Without a standard model, applications must understand the underlying network. Imagine having different versions of app for 
wi-fi, Ethernet, fiber etc. 

Simplified Network Equipment Management, because everything speaks the same language. 

Decoupled innovation: Innovations can happen in each layer of model independently without affecting the entire system. 


Layer 7: Application 

- Provides Network services given directly to applications
- Uses HTTP, FTP, SMTP... (Protocols)
- End User Layer (What the user essentially 'sees' or 'interacts' with)

Layer 6: Presentation Layer (otherwise known as syntax layer)

- Data translated into readible format and encryption handled
- Ensures data being sent is in usable/readable format

Layer 5: Session Layer:

- Manage sessions between different applications? Like TLS, Sockets and more
- Establish, Terminate, maintain and manage connections. (Knowing when to Maintain the connection/end it etc.)

Layer 4: Transport Layer: TCP/UDP Protocols

- End to end communication and data integrity are managed.
- Responsible for providing reliable data transfer services to upper layers
- Ensures data packets will arrive in the correct sequence

Layer 3: Network Layer: 

- Routing and data packets managed. (IP, MAC address)
- How is the data going to be sent to Reciptient? Decides best path for data to travel between networks. 
- Data is organised into packets and rotuers route data packets to destination IP. 

Layer 2: Data Link Layer:

- Node to node data transfer and error detection managed. (Ethernet, Switches, bridges etc.)
- Ensures data packets sent and recieved correctly between different network nodes. Maintain reliable link between devices
- MAC adresses, switches, Bridges work here.

Layer 1: Physical Layer:

- Fibers, Wires, Wireless, Hubs. Physical Connection.
- Transmits raw bit stream over physical medium (wires, wifi etc.) Everyone in the area recieves the data. Like shouting




							TCP/IP Model

A much more condensed format of the OSI model.

Layer 4: Application Layer

- Where network applications and their protocols operate

Layer 3: Transport Layer

- Where end to end communication and data transfer happen. (TCP/UDP)

Layer 2: Internet Layer

- Logical addressing and routing data. (IP)

Layer 1: Network Access Layer

- MAC Adresses, Ethernet, Wireless, LAN etc. Encompasses the physical and data aspects.




							DNS


DNS is like a contacts list for the internet. 
If you search google.com, DNS will look through the phonebook for the IP address assosiated with google.com so
it knows where to take you. 


							DNS Components:

Name servers: Load DNS settings and configirations. 
	      2 types: Authoritative or Recursive
	      Authoratative name servers: Hold actual DNS records. When queried they provide IP address for domain name
	      Recursive name servers: Do not hold DNS records. When Queried, forward request to other name servers.
				      Can also cache info they recieve to speed up future queries. 



Zone Files: - Stored inside name servers. Stores domain name information in organized and readable way. 
	    - Helps name servers answer queries about how to get to a domain.
	     				


DNS Records: - Zone files are composed of multiple Resource records
	     - Each resource record contains info: Hosts, TTL (Time to live), Class, Type, Data, NS, Data (IP)
Types of DNS Records:
	A : Maps domain to IPv4			(Address Record)
     AAAA : Maps domain to IPv6			(Address Record)
     CName: An Alias. Allows you to point multiple domain names to the same IP address 
        MX: Used for setting up emails etc	(Point to mail server responsible for recieving domain)
       TXT: Used to verify that you own a domain. Used for Verification Records. 	(Allows us to insert text into DNS)
	



							DNS Resolutions:

The process of converting domain names into IP address's. 

						DNS Hierarchy and Distribution

How DNS actually works. The 4 steps. 
						
1. DNS ROOT : 			Keeps information on where to find top level domains
2. Top Level Domains: 		The main Domains... .com .org .net
3. Authoratitive name servers:	Hosts zones for domains
4. Domains:			Each domain has it's zone file. 
									The DNS resolver is in the middle of all of this

							NOTICE

It's Important for a DEVOPS engineer to understand Networking, Especially DNS, as we are often required to debug network related issues. 


Domain Registrar : Allows you to purchase and Register Domains. 
DNS Hosting Provider : Operated DNS Nameservers that host DNS Zones. Allows you to manage DNS records within these zones. 

If Domain Registrar and DNS hosting provider are same companies, then the Nameservers and DNS zones are hosted automatically.
If they are different companies, need to provide name server info on where DNS zone is already Hosted. 



						DNS Tools for Debugging

Linux Commands for debugging: 

nslookup [domain]
dig [domain]


						/etc/hosts

- A local file on computer. 
- Takes priority over DNS for specific entries.
- Maps domain names to IP addresses that you set.
- Computer always first checks the /etc/hosts file.
- Example: [IP] [Domain Name] 127.0.0.1 example.com 


							Routing

- The Process of figuring out the best path for your data to travel across networks. Like a GPS
- Routing makes sure that data reaches destination quickly and efficiently. Without it, Data may get lost. 
- It is fundemental for the internet to run properly. 

Routers determine the best path using routing tables (like a map).

					Why is Routing important to understand

When you have a good effective route, this ensures data packets take best path so reduce latency and improves network performance

Ensures Reliable application delivery. Crucial for delivery applications and services. 

Crucial for managing complex infrastructures. 

						

						Static vs Dynamic Routing

			
				Static						Dynamic

- Routes manually set up by network admins.		- Uses algorothims and complex protocols to find best path for data 
- Give data fixed map to follow.			- Keeps data moving efficiently even if network conditions change
- Doesn't adapt well					- Automatically adjusts routes based on network conditions
- Fixed paths set by network admins			- Scalable and Adaptable
- Simple but not scalable				- Routing Protocols



							Routing Protocols

- Automate process of determining best path for data to travel across a network.
- Enhance Network Efficiency. Improves network performance. Optimised Delivery Service. 
- Uses algorithims to figure out best path, and adapt to unexpected events. (Network going down)

2 Routing Protocols

		OSPF (Open Shortest Path first		)			BGP (Border Gateway Protocol)

- Open Shortest Path First					- Used to route data between different autonomous systems 
- Finds shortest path for the data to travel			- Allows network admins to define routing policies
- Can quickly recalculate routes when changes in network happen



							Subnetting	

Subnetting: Dividing one large network into smaller more managable sub networks

- Improves network management
- Improves efficiency in handling different networks
- Helps organise and manage IP addrress more efficiently. 

						Subnet Masks and Calculations

Basically, a subnet mask tells ur device which IPs are on the same network and which Ips need to be routed externally. 

- Divide an IP address into network and host portions. 
- Helps routers determine which part of IP address is the network address and which part is the host address
- For example: (First 24 bits are network part and remaining 8 bits are for Host Addresses)
- The side notation of the subnet mask for the above example will be /24. 



					CIDR (Classless Inter-Domain Routing)

- A method for allocating IP addresses and routing IP packets. 
???????
